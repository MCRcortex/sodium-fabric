#version 450 core
layout(local_size_x = LOCAL_SIZE_X) in;

#import <sodium:occlusion/datatypes.h>
#import <sodium:occlusion/scene_data.glsl>


layout(std430, binding = 1) restrict readonly buffer RegionArrayData {
    int[] regionArray;
};

layout(std430, binding = 2) restrict readonly buffer RegionMetaData {
    RegionMeta[] regions;
};

layout(std430, binding = 3) restrict readonly buffer RegionVisibilityData {
    uint[] visibility;
};

layout(std430, binding = 4) restrict writeonly buffer SectionRasterCommandsData {
    DrawElementsIndirectCommand[] rasterCommands;
};

//NOTE: needs to be set too zero per frame
layout(std430, binding = 5) restrict buffer SectionComputeIndirect {
    DispatchIndirectCommand dispatchCommand;
};

layout(std430, binding = 6) restrict writeonly buffer RegionArrayOutData {
    int[] regionArrayOut;
};

void main() {
    if (gl_GlobalInvocationID.x >= regionCount) {
        return;
    }
    //TODO: Benchmark both ways, one where branch the other where no branch and its just a multiplication
    //uint mult = visibility[gl_GlobalInvocationID.x] == frameId?1:0;


    //TODO: pre set the constants or some shit
    rasterCommands[gl_GlobalInvocationID.x].firstIndex   = 0;
    rasterCommands[gl_GlobalInvocationID.x].baseVertex   = 0;
    if (visibility[gl_GlobalInvocationID.x] == frameId) {//The region is visible so must raster tests
        int rid = regionArray[gl_GlobalInvocationID.x];
        rasterCommands[gl_GlobalInvocationID.x].count = 3*2*6;
        uint sectionCount = regions[rid].sectionCount;
        rasterCommands[gl_GlobalInvocationID.x].instanceCount = sectionCount;
        rasterCommands[gl_GlobalInvocationID.x].baseInstance = regions[rid].sectionStart;
        //TODO: could also use the data from the dispatchCommand to do a multidrawindirectcount command
        {
            uint offset = atomicAdd(dispatchCommand.num_groups_x, 1);
            atomicMax(dispatchCommand.num_groups_y, (sectionCount/TERRAIN_LOCAL_SIZE_Y)+1);//TODO: FIXME: need to just ceil this division or something better than + 1
            regionArrayOut[offset] = rid;
        }

    } else {//The region isnt visible so dont test anything
        rasterCommands[gl_GlobalInvocationID.x].count = 0;
        rasterCommands[gl_GlobalInvocationID.x].instanceCount = 0;
        rasterCommands[gl_GlobalInvocationID.x].baseInstance = 0;
    }
}