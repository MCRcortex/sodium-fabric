#version 450 core
layout(local_size_x = 1, local_size_y = LOCAL_SIZE_Y) in;

#import <sodium:occlusion/datatypes.h>
#import <sodium:occlusion/scene_data.glsl>

layout(std430, binding = 1) restrict readonly buffer RegionArrayData {
    int[] regionArray;
};

layout(std430, binding = 2) restrict readonly buffer RegionMetaData {
    RegionMeta[] regions;
};
#define REGION regions[regionArray[gl_GlobalInvocationID.x]]

layout(std430, binding = 3) restrict readonly buffer SectionVisibilityData {
    uint[] visibility;
};

layout(std430, binding = 4) restrict readonly buffer SectionMetaData {
    SectionMeta sections[];
};

uint SECTION_ID;

#define SECTION sections[SECTION_ID]


void main() {
    if (REGION.sectionCount >= gl_GlobalInvocationID.y) {
        return;
    }
    SECTION_ID = REGION.sectionStart + gl_GlobalInvocationID.y;

    //TODO: find whats faster to do first
    if (SECTION.id != SECTION_ID) {
        return;
    }

    if (visibility[gl_GlobalInvocationID.x*REGION_SECTION_MAX_SIZE + gl_GlobalInvocationID.y] != frameId) {
        return;
    }



}